name: Build ROCm 5.4.2 Wheels & Release

on: workflow_dispatch

permissions:
  contents: write

jobs:
  build_wheels:
    name: Build ROCm wheel for Python ${{ matrix.pyver }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        pyver: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: 'ROCmSoftwarePlatform/rocPRIM'
          ref: 'rocm-5.4.2'
          path: 'rocPRIM'
      - uses: actions/checkout@v3
        with:
          repository: 'ROCmSoftwarePlatform/rocThrust'
          ref: 'rocm-5.4.2'
          path: 'rocThrust'
          
      - name: Install ROCm SDK
        run: |
          sudo apt update
          wget https://repo.radeon.com/amdgpu-install/5.4.2/ubuntu/focal/amdgpu-install_5.4.50402-1_all.deb
          sudo dpkg -i amdgpu-install_5.4.50402-1_all.deb
          sudo DEBIAN_FRONTEND=noninteractive amdgpu-install --usecase=rocm,openclsdk,hiplibsdk --no-dkms --no-32 -y
          echo "/opt/rocm/bin" >> $GITHUB_PATH
          echo "ROCM_PATH=/opt/rocm" >> $GITHUB_ENV
          
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.pyver }}
          
      - name: Install Dependencies
        run: |
          pip3 install build wheel safetensors sentencepiece ninja 'torch==2.0.1+rocm5.4.2' torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/rocm5.4.2
        
      - name: Build Wheel
        id: build-wheel
        run: |
          if ($(Get-Content 'setup.py' -raw) -match 'version = "(\d+\.(?:\d+\.?)*)" \+ \(') {Write-Output $('::notice file=build-wheels-release.yml,line=41,title=Package Version::Detected package version is: {0}' -f $Matches[1]); Write-Output "PACKAGE_VERSION=$($Matches[1])" >> "$env:GITHUB_OUTPUT"} else {Write-Output '::error file=build-wheels-release.yml,line=41::Could not parse version from setup.py! You must upload wheels manually!'; Write-Output "PACKAGE_VERSION=None" >> "$env:GITHUB_OUTPUT"}
          python3 -m build -n --wheel
        shell: pwsh
        
      - uses: actions/upload-artifact@v3
        with:
          name: 'wheels'
          path: ./dist/*.whl
          
      - name: Upload files to a GitHub release
        if: steps.build-wheel.outputs.PACKAGE_VERSION != 'None'
        uses: svenstaro/upload-release-action@2.6.1
        with:
          file: ./dist/*.whl
          tag: ${{ steps.build-wheel.outputs.PACKAGE_VERSION }}
          file_glob: true
          overwrite: true
          release_name: ${{ steps.build-wheel.outputs.PACKAGE_VERSION }}
          body: "Wheels are compiled with CUDA 11.7 and 11.8 for Windows and Linux x64"
